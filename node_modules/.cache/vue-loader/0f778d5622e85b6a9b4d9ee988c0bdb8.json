{"remainingRequest":"/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/src/components/OrderNow.vue?vue&type=template&id=482d6650&","dependencies":[{"path":"/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/src/components/OrderNow.vue","mtime":1631091768856},{"path":"/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/saoskecap/Master/Git/pinjem/pinjem_web_kurir/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}